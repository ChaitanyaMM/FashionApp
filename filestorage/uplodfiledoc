	
	@RequestMapping(value = "/filesupload", method = RequestMethod.POST, headers = ("content-type=multipart/*"))
	@ResponseBody
	public ResponseEntity<Map<String, Object>> uploadImage(@RequestParam("file") List<MultipartFile> files) {

		System.out.println("Multiple images is calling to the folders<>");
		Map<String, Object> map = new HashMap<String, Object>();
		if (files.size() == 0) {
			map.put("status", false);
			map.put("data", null);
			return ResponseEntity.ok().body(map);
		}
		
		List<String> result = saveImagestoFolder(files);
		map.put("status", true);
		map.put("data", result);
		return ResponseEntity.ok().body(map);
	}

	private List<String> saveImagestoFolder(List<MultipartFile> files) {
		int count = 0;
		List<String> list = new ArrayList<String>();
		for (MultipartFile file : files) {
			try {
				byte[] bytes = file.getBytes();
				String date = getTimeInMillis();
				Path path = Paths.get(UPLOADED_FOLDER + date + ".*");
				Files.write(path, bytes);
				count++;
				list.add("file"+ date + ".png");
			} catch (IOException e) {
				e.printStackTrace();
			}

		}
		if (count == files.size()) {
			return list;
		} else {
			return list;
		}
	}

	private synchronized String getTimeInMillis() {
		return String.valueOf(new Date().getTime());
	}
